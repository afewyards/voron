#####################################################################
# 	Macros
#####################################################################

[gcode_macro PRINT_START]
gcode:
  {% if printer.gcode_move.homing_origin.z == 0 %}
    SET_DISPLAY_TEXT MSG="Please select sheet"
    RESPOND TYPE=echo MSG="Please select sheet"
    BASE_CANCEL_PRINT
  {% else %}
    {% if printer.toolhead.homed_axes == "xyz" %}
      G90
      G0 Z10 X181.5 Y249.5 F5000
    {% else %}
      RESPOND TYPE=echo MSG="Homing"
      G28
    {% endif %}
    G90
    RESPOND TYPE=echo MSG="Parking nozzle on z-stop"
    G0 Z10 X181.5 Y249.5 F3000
    G0 Z0 F1000
    M83
    M140 S{params.BED}
    #HEAT_CHAMBER TARGET={params.CHAMBER}
    M104 S{params.EXTRUDER}
    M190 S{params.BED}
    M109 S{params.EXTRUDER}
    QUAD_GANTRY_LEVEL
    M190 S{params.BED}
    M109 S{params.EXTRUDER}
    PRIME_LINE
    M221 S100
  {% endif %}


[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
gcode:
    SAVE_GCODE_STATE NAME=PAUSE_state
    BASE_PAUSE
    G91
    G1 E-1 F2100
    G1 Z30
    G90
    G1 X125 Y0 F6000

    
[gcode_macro RESUME]
rename_existing: BASE_RESUME
variable_e: 1      #edit to your retract length
gcode:
    G91
    G1 E{e} F2100
    G90
    RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1
    BASE_RESUME

    
[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    TURN_OFF_HEATERS
    CLEAR_PAUSE
    SDCARD_RESET_FILE
    BASE_CANCEL_PRINT
    G1 X125 Y250 F3600

    
[gcode_macro QUAD_GANTRY_LEVEL]
rename_existing: _QUAD_GANTRY_LEVEL
gcode:
  SET_VELOCITY_LIMIT ACCEL=35000 VELOCITY=500
  _QUAD_GANTRY_LEVEL
  SET_VELOCITY_LIMIT ACCEL={printer.toolhead.max_accel} VELOCITY={printer.toolhead.max_velocity}
  G90
  G0 Z10 X181.5 Y249.5 F30000
  G28 Z
  
  {% if printer.extruder.temperature > 200 %}
    NOZZLE_CLEAN
    G28 Z
  {% endif %}
 
   
[gcode_macro PRINT_END]
gcode:
  M400                           ; wait for buffer to clear
  G92 E0                         ; zero the extruder
  G91                            ; relative positioning
  
  {% if printer.gcode_move.position.y > 240 %}
    G0 Z10.00 X20.0 Y-20.0 F14000
  {% else %}
    G0 Z10.00 X20.0 Y20.0 F14000
  {% endif %}
  
  G1 E-1.0 F4000                 ; retract filament
   
  G90                            ; absolute positioning
  G1 X125 Y255 F3600             ; park nozzle at rear
  TURN_OFF_HEATERS
  M107                           ; turn off fan
  SET_GCODE_OFFSET Z=0


[gcode_macro PRIME_LINE]
gcode:
  SAVE_GCODE_STATE NAME=PRIME_LINE_state
  G90 
  G0 X95 Y0 Z5 F8000
  G0 Z0.3 F5000
  G92 E0                           
  G1 E15 F300                              
  G1 X153 F700 E20
  G1 X155 F1000       
  G1 Y5 F1000
  G1 X110 F30000              
  G92 E0                            
  G0 Z5 F10000              
  RESTORE_GCODE_STATE NAME=PRIME_LINE_state    


[gcode_macro NOZZLE_CLEAN]
gcode:
  SAVE_GCODE_STATE NAME=BEFORE_CLEAN
  SET_VELOCITY_LIMIT ACCEL=35000
  {% if "z" not in printer.toolhead.homed_axes %}
    G28                     ; Only G28 Home if needed
  {% endif %}
  G90
  G0 Z10 F3000              ; lift nozzle
  G0 X30 Y235 F9000         ; move to nozzle brush
  G0 Z3.3 F3000               ; move nozzle into brush
  
  {% for wipe in range(6) %} ; wipe nozzle across brush
    {% for coordinate in [(15,253),(90,253)] %}
      G0 X{coordinate[0]} Y{coordinate[1]} F20000
    {% endfor %}
    {% for coordinate in [(90,235),(15,235)] %}
      G0 X{coordinate[0]} Y{coordinate[1]} F35000
    {% endfor %}
  {% endfor %}

  {% for wipe in range(3) %} ; wipe nozzle across brush
    {% for coordinate in [(15,253),(90,253)] %}
      G0 X{coordinate[0]} Y{coordinate[1]} F7500
    {% endfor %}
    {% for coordinate in [(90,235),(15,235)] %}
      G0 X{coordinate[0]} Y{coordinate[1]} F35000
    {% endfor %}
  {% endfor %}
  
  G0 Z3.5 F3000               ; move nozzle into brush
  
  {% for wipe in range(6) %} ; wipe nozzle across brush
    {% for coordinate in [(15,253),(90,253)] %}
      G0 X{coordinate[0]} Y{coordinate[1]} F35000
    {% endfor %}
  {% endfor %}
  
  G0 Z10 F3000              ; lift z 30mm
  SET_VELOCITY_LIMIT ACCEL={printer.toolhead.max_accel}
  RESTORE_GCODE_STATE NAME=BEFORE_CLEAN


[gcode_macro HEAT_CHAMBER]
description: Heatsoak chamber to a specific temperature with a timeout
gcode:
    {% set SETPOINT_TEMP = params.TARGET|default(0)|float %}
    {% set MAXTIME = params.MAXTIME|default(15)|int %}

    SET_HEATER_TEMPERATURE HEATER=chamber TARGET={SETPOINT_TEMP}
    # {% set V = printer["gcode_macro _USER_VARIABLES"].verbose %}

    {% for _ in range(1, MAXTIME) %}
        _WAIT_CHAMBER_TEMP TEMP={SETPOINT_TEMP}
    {% endfor %}
    {% if V %}
        RESPOND MSG="Chamber temperature OK !"
    {% endif %}


[gcode_macro _WAIT_CHAMBER_TEMP]
# This macro is needed to allow klipper populate a new value in the printer[...].temperature variable
# as each variables are populated only once at the beginning of every macro call
gcode:
    {% set SETPOINT_TEMP = params.TEMP|default(0)|float %}
    {% set CURRENT_TEMP = printer["heater_generic chamber"].temperature|float %}

    {% if CURRENT_TEMP <= SETPOINT_TEMP %}
        RESPOND MSG="Heating up the chamber : {CURRENT_TEMP}/{SETPOINT_TEMP}"
        G4 P{60000 * 1} # wait a minute and check again if called in a loop
    {% endif %}
    

[gcode_macro SPEED_TEST]
gcode:
  {% set SPEED = params.SPEED|default(100)|float %}
  {% set PADDING = params.PADDING|default(10)|float %}
  
  {% set FEEDRATE_MAX = SPEED * 60 %}
  {% set FEEDRATE_MIN = FEEDRATE_MAX / 2 %}

  {% set X_MAX = printer.configfile.settings.stepper_x.position_max - PADDING %}
  {% set Y_MAX = printer.configfile.settings.stepper_y.position_max - PADDING %}
  {% set Z_POS = printer.configfile.settings.stepper_z.position_max / 2 %}

  SET_DISPLAY_TEXT MSG="Speed test {SPEED}mm/s"
  RESPOND TYPE=echo MSG="Testing speed up to {SPEED}mm/s"
  SET_VELOCITY_LIMIT VELOCITY={SPEED}

  {% if "z" not in printer.toolhead.homed_axes %}
    G28
  {% endif %}
  G90
  G1 X{PADDING} Y{PADDING} Z{Z_POS} F10000
  

  {% for percentage in [0.5,0.6,0.7,0.8,0.9,1] %}
    {% set FEEDRATE = FEEDRATE_MAX * percentage %}
    RESPOND TYPE=echo MSG="Speed: {FEEDRATE / 60}mm/s F{FEEDRATE}"
    
    G1 X{PADDING} Y{PADDING} F{FEEDRATE}
    G1 X{X_MAX} Y{Y_MAX} F{FEEDRATE}
    G1 X{PADDING} Y{PADDING} F{FEEDRATE}
    G1 X{X_MAX} Y{Y_MAX} F{FEEDRATE}
    
    G1 X{PADDING} Y{Y_MAX} F{FEEDRATE}
    
    G1 X{X_MAX} Y{PADDING} F{FEEDRATE}
    G1 X{PADDING} Y{Y_MAX} F{FEEDRATE}
    G1 X{X_MAX} Y{PADDING} F{FEEDRATE}
    G1 X{PADDING} Y{Y_MAX} F{FEEDRATE}
  {% endfor %}

  G1 X{PADDING} Y{PADDING} Z{Z_POS} F10000
  RESPOND TYPE=echo MSG="Speed test completed"
  SET_VELOCITY_LIMIT VELOCITY={printer.toolhead.max_velocity}

[gcode_macro PUSH]
gcode:
    {% set message = params.MESSAGE|default() %}
    {% if message %}
        RUN_SHELL_COMMAND CMD=update_git_script_message PARAMS="'{params.MESSAGE}'"
    {% else %}
        RUN_SHELL_COMMAND CMD=update_git_script
    {% endif %}

[gcode_shell_command update_git_script]
command: bash -c "bash $HOME/klipper-backup/script.sh"
timeout: 90.0
verbose: True

[gcode_shell_command update_git_script_message]
command: bash -c "bash $HOME/klipper-backup/script.sh $0"
timeout: 90.0
verbose: True